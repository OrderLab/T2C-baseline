real-time non-blocking time  (microseconds, -R) unlimited
core file size              (blocks, -c) 0
data seg size               (kbytes, -d) unlimited
scheduling priority                 (-e) 0
file size                   (blocks, -f) unlimited
pending signals                     (-i) 7438
max locked memory           (kbytes, -l) 243032
max memory size             (kbytes, -m) unlimited
open files                          (-n) 1024
pipe size                (512 bytes, -p) 8
POSIX message queues         (bytes, -q) 819200
real-time priority                  (-r) 0
stack size                  (kbytes, -s) 8192
cpu time                   (seconds, -t) unlimited
max user processes                  (-u) 7438
virtual memory              (kbytes, -v) unlimited
file locks                          (-x) unlimited
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
NameNode.instance is null
NameNode.instanceis null
NameNode.instanceis null
Dumping vars: 153
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, blockManagerInstance.maxReplication, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.pendingReconstructionBlocksCount, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, blockManagerInstance.numBlocksPerIteration, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, blockManagerInstance.pendingReconstruction.timeout, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, blockManagerInstance.minReplicationToBeInMaintenance, blockManagerInstance.datanodeManager.staleInterval, blockManagerInstance.datanodeManager.shouldSendCachingCommands, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, blockManagerInstance.replicationStreamsHardLimit, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, blockManagerInstance.bmSafeMode.safeReplication, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.startupDelayBlockDeletionInMs, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.maxNumBlocksToLog, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.excessRedundancyMap.size, blockManagerInstance.bmSafeMode.inRollBack, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.datanodeManager.$assertionsDisabled, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.storageInfoDefragmentRatio, blockManagerInstance.heartbeatManager.stats.xceiverCount, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, blockManagerInstance.pendingReconstruction.timedOutCount, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, blockManagerInstance.storageInfoDefragmentInterval, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.bmSafeMode.startTime, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.heartbeatManager.stats.capacityRemaining, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.providedStorageMap.$assertionsDisabled, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier]
CHANG: dumpStates finished, took 98 ms to iterate through 153 states
CHANG: final fields in total: 0
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
NameNode.instance is null
NameNode.instanceis null
NameNode.instanceis null
No suppress file found.
CHANG: start to assertAll
Dumping vars: 153
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, blockManagerInstance.maxReplication, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.pendingReconstructionBlocksCount, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, blockManagerInstance.numBlocksPerIteration, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, blockManagerInstance.pendingReconstruction.timeout, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, blockManagerInstance.minReplicationToBeInMaintenance, blockManagerInstance.datanodeManager.staleInterval, blockManagerInstance.datanodeManager.shouldSendCachingCommands, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, blockManagerInstance.replicationStreamsHardLimit, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, blockManagerInstance.bmSafeMode.safeReplication, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.startupDelayBlockDeletionInMs, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.maxNumBlocksToLog, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.excessRedundancyMap.size, blockManagerInstance.bmSafeMode.inRollBack, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.datanodeManager.$assertionsDisabled, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.storageInfoDefragmentRatio, blockManagerInstance.heartbeatManager.stats.xceiverCount, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, blockManagerInstance.pendingReconstruction.timedOutCount, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, blockManagerInstance.storageInfoDefragmentInterval, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.bmSafeMode.startTime, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.heartbeatManager.stats.capacityRemaining, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.providedStorageMap.$assertionsDisabled, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier]
CHANG: dumpStates finished, took 37 ms to iterate through 153 states
CHANG: final fields in total: 0
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
NameNode.instance is null
NameNode.instanceis null
NameNode.instanceis null
CHANG: start to assertAll
Dumping vars: 153
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, blockManagerInstance.maxReplication, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.pendingReconstructionBlocksCount, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, blockManagerInstance.numBlocksPerIteration, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, blockManagerInstance.pendingReconstruction.timeout, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, blockManagerInstance.minReplicationToBeInMaintenance, blockManagerInstance.datanodeManager.staleInterval, blockManagerInstance.datanodeManager.shouldSendCachingCommands, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, blockManagerInstance.replicationStreamsHardLimit, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, blockManagerInstance.bmSafeMode.safeReplication, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.startupDelayBlockDeletionInMs, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.maxNumBlocksToLog, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.excessRedundancyMap.size, blockManagerInstance.bmSafeMode.inRollBack, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.datanodeManager.$assertionsDisabled, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.storageInfoDefragmentRatio, blockManagerInstance.heartbeatManager.stats.xceiverCount, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, blockManagerInstance.pendingReconstruction.timedOutCount, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, blockManagerInstance.storageInfoDefragmentInterval, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.bmSafeMode.startTime, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.heartbeatManager.stats.capacityRemaining, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.providedStorageMap.$assertionsDisabled, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier]
CHANG: dumpStates finished, took 13 ms to iterate through 153 states
CHANG: final fields in total: 0
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
NameNode.instance is null
NameNode.instanceis null
NameNode.instanceis null
CHANG: start to assertAll
Dumping vars: 153
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, blockManagerInstance.maxReplication, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.pendingReconstructionBlocksCount, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, blockManagerInstance.numBlocksPerIteration, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, blockManagerInstance.pendingReconstruction.timeout, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, blockManagerInstance.minReplicationToBeInMaintenance, blockManagerInstance.datanodeManager.staleInterval, blockManagerInstance.datanodeManager.shouldSendCachingCommands, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, blockManagerInstance.replicationStreamsHardLimit, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, blockManagerInstance.bmSafeMode.safeReplication, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.startupDelayBlockDeletionInMs, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.maxNumBlocksToLog, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.excessRedundancyMap.size, blockManagerInstance.bmSafeMode.inRollBack, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.datanodeManager.$assertionsDisabled, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.storageInfoDefragmentRatio, blockManagerInstance.heartbeatManager.stats.xceiverCount, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, blockManagerInstance.pendingReconstruction.timedOutCount, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, blockManagerInstance.storageInfoDefragmentInterval, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.bmSafeMode.startTime, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.heartbeatManager.stats.capacityRemaining, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.providedStorageMap.$assertionsDisabled, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier]
CHANG: dumpStates finished, took 30 ms to iterate through 153 states
CHANG: final fields in total: 0
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
NameNode.instance is null
NameNode.instanceis null
NameNode.instanceis null
CHANG: start to assertAll
Dumping vars: 153
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, blockManagerInstance.maxReplication, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.pendingReconstructionBlocksCount, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, blockManagerInstance.numBlocksPerIteration, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, blockManagerInstance.pendingReconstruction.timeout, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, blockManagerInstance.minReplicationToBeInMaintenance, blockManagerInstance.datanodeManager.staleInterval, blockManagerInstance.datanodeManager.shouldSendCachingCommands, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, blockManagerInstance.replicationStreamsHardLimit, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, blockManagerInstance.bmSafeMode.safeReplication, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.startupDelayBlockDeletionInMs, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.maxNumBlocksToLog, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.excessRedundancyMap.size, blockManagerInstance.bmSafeMode.inRollBack, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.datanodeManager.$assertionsDisabled, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.storageInfoDefragmentRatio, blockManagerInstance.heartbeatManager.stats.xceiverCount, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, blockManagerInstance.pendingReconstruction.timedOutCount, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, blockManagerInstance.storageInfoDefragmentInterval, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.bmSafeMode.startTime, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.heartbeatManager.stats.capacityRemaining, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.providedStorageMap.$assertionsDisabled, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier]
CHANG: dumpStates finished, took 19 ms to iterate through 153 states
CHANG: final fields in total: 0
CHANG: start to assertAll
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
Dumping vars: 259
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, NameNode.instance.namesystem.cacheManager.scanIntervalMs, NameNode.instance.namesystem.isDefaultAuditLogger, blockManagerInstance.maxReplication, blockManagerInstance.pendingReconstructionBlocksCount, NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH, blockManagerInstance.numBlocksPerIteration, NameNode.instance.haEnabled, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, NameNode.instance.namesystem.nnResourceChecker.duReserved, NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses, NameNode.instance.namesystem.dir.xattrsEnabled, NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit, blockManagerInstance.pendingReconstruction.timeout, NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, NameNode.instance.namesystem.dir.skipQuotaCheck, blockManagerInstance.minReplicationToBeInMaintenance, NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL, NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs, blockManagerInstance.datanodeManager.shouldSendCachingCommands, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, NameNode.instance.namesystem.needRollbackFsImage, NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs, blockManagerInstance.replicationStreamsHardLimit, NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, NameNode.instance.namesystem.dir.accessTimePrecision, NameNode.instance.namesystem.leaseManager.softLimit, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, NameNode.instance.namesystem.fsImage.exitAfterSave, NameNode.instance.namesystem.dir.storagePolicyEnabled, blockManagerInstance.bmSafeMode.safeReplication, NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, NameNode.instance.namesystem.maxFsObjects, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.startupDelayBlockDeletionInMs, NameNode.instance.namesystem.maxListOpenFilesResponses, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.maxNumBlocksToLog, NameNode.instance.namesystem.dir.contentSleepMicroSec, NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, NameNode.instance.namesystem.snapshotManager.captureOpenFiles, NameNode.instance.namesystem.startTime, NameNode.instance.namesystem.resourceLowSafeMode, NameNode.instance.namesystem.hasResourcesAvailable, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, NameNode.instance.namesystem.fsImage.isUpgradeFinalized, NameNode.instance.namesystem.edekCacheLoaderInterval, blockManagerInstance.excessRedundancyMap.size, NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime, NameNode.instance.namesystem.fsRunning, NameNode.instance.namesystem.dir.contentCountLimit, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, NameNode.instance.started, blockManagerInstance.datanodeManager.$assertionsDisabled, NameNode.instance.namesystem.topConf.isEnabled, blockManagerInstance.storageInfoDefragmentRatio, NameNode.instance.namesystem.cacheManager.nextDirectiveId, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, NameNode.instance.namesystem.resourceRecheckInterval, blockManagerInstance.pendingReconstruction.timedOutCount, NameNode.instance.namesystem.fsImage.lastAppliedTxId, NameNode.instance.namesystem.numCommittedAllowed, NameNode.instance.namesystem.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, NameNode.instance.namesystem.cacheManager.$assertionsDisabled, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, NameNode.instance.namesystem.maxBlocksPerFile, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, NameNode.instance.namesystem.haEnabled, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.heartbeatManager.stats.capacityRemaining, NameNode.instance.namesystem.dir.inodeXAttrsLimit, NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, NameNode.instance.namesystem.dir.posixAclInheritanceEnabled, NameNode.instance.namesystem.snapshotManager.numSnapshots, NameNode.instance.namesystem.editLogRollerInterval, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, NameNode.instance.namesystem.alwaysUseDelegationTokensForTests, NameNode.instance.namesystem.dir.$assertionsDisabled, NameNode.instance.namesystem.fsLock.lockSuppressWarningIntervalMs, NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled, NameNode.instance.ACTIVE_STATE.lastHATransitionTime, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, NameNode.instance.namesystem.cacheManager.maxListCachePoolsResponses, NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, NameNode.instance.state.lastHATransitionTime, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, NameNode.instance.STANDBY_STATE.lastHATransitionTime, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, NameNode.instance.namesystem.dir.xattrMaxSize, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, NameNode.instance.namesystem.snapshotManager.snapshotCounter, blockManagerInstance.datanodeManager.staleInterval, NameNode.instance.namesystem.dir.yieldCount, NameNode.instance.namesystem.lazyPersistFileScrubIntervalSec, NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, NameNode.instance.namesystem.manualSafeMode, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, NameNode.instance.namesystem.topMetrics.rollingWindowManagers, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, NameNode.instance.namesystem.leaseManager.hardLimit, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, NameNode.instance.namesystem.minBlockSize, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, NameNode.instance.namesystem.edekCacheLoaderDelay, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, NameNode.instance.namesystem.imageLoaded, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs, NameNode.instance.namesystem.cacheManager.directivesById, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, NameNode.instance.DEFAULT_PORT, NameNode.instance.stopRequested, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, NameNode.instance.namesystem.blockDeletionIncrement, NameNode.instance.namesystem.leaseRecheckIntervalMs, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT, NameNode.instance.namesystem.dir.maxDirItems, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, NameNode.instance.namesystem.snapshotManager.snapshottables, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.bmSafeMode.inRollBack, NameNode.instance.rpcServer.serviceAuthEnabled, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES, NameNode.instance.namesystem.leaseManager.shouldRunMonitor, NameNode.instance.namesystem.leaseManager.leasesById, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, NameNode.instance.namesystem.fsImage.$assertionsDisabled, NameNode.instance.namesystem.dir.quotaInitThreads, NameNode.instance.namesystem.leaseManager.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.heartbeatManager.stats.xceiverCount, NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN, NameNode.instance.namesystem.standbyShouldCheckpoint, NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, NameNode.instance.namesystem.startingActiveService, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort, blockManagerInstance.storageInfoDefragmentInterval, NameNode.instance.namesystem.maxCorruptFileBlocksReturn, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.bmSafeMode.startTime, NameNode.instance.namesystem.dir.aclsEnabled, NameNode.instance.namesystem.fsLock.metricsEnabled, NameNode.instance.allowStaleStandbyReads, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, NameNode.instance.namesystem.snapshotDiffReportLimit, NameNode.instance.namesystem.dir.maxComponentLength, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, NameNode.instance.namesystem.dir.lsLimit, blockManagerInstance.providedStorageMap.$assertionsDisabled, NameNode.instance.namesystem.isPermissionEnabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, NameNode.instance.namesystem.editLogRollerThreshold, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier, NameNode.instance.namesystem.dir.isPermissionEnabled]
CHANG: dumpStates finished, took 58 ms to iterate through 259 states
CHANG: final fields in total: 0
CHANG: start to assertAll
DataNode.instance is null
DataNode.instanceis null
DataNode.instanceis null
Dumping vars: 259
[blockManagerInstance.datanodeManager.avoidStaleDataNodesForWrite, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.size, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.maxLoadFactor, blockManagerInstance.heartbeatManager.stats.capacityUsed, NameNode.instance.namesystem.cacheManager.scanIntervalMs, NameNode.instance.namesystem.isDefaultAuditLogger, blockManagerInstance.maxReplication, blockManagerInstance.pendingReconstructionBlocksCount, NameNode.instance.namesystem.snapshotManager.SNAPSHOT_ID_BIT_WIDTH, blockManagerInstance.numBlocksPerIteration, NameNode.instance.haEnabled, blockManagerInstance.redundancyRecheckIntervalMs, blockManagerInstance.lowRedundancyBlocksCount, blockManagerInstance.datanodeManager.heartbeatRecheckInterval, NameNode.instance.namesystem.nnResourceChecker.duReserved, NameNode.instance.namesystem.dir.quotaByStorageTypeEnabled, blockManagerInstance.datanodeManager.defaultInfoSecurePort, blockManagerInstance.providedStorageMap.providedEnabled, blockManagerInstance.datanodeManager.hasClusterEverBeenMultiRack, blockManagerInstance.checkNSRunning, blockManagerInstance.bmSafeMode.blockSafe, NameNode.instance.namesystem.cacheManager.maxListCacheDirectivesNumResponses, NameNode.instance.namesystem.dir.xattrsEnabled, NameNode.instance.namesystem.snapshotManager.maxSnapshotLimit, blockManagerInstance.pendingReconstruction.timeout, NameNode.instance.namesystem.fsLock.writeLockHeldTimeStampNanos, blockManagerInstance.heartbeatManager.heartbeatRecheckInterval, blockManagerInstance.datanodeManager.blockInvalidateLimit, NameNode.instance.namesystem.dir.skipQuotaCheck, blockManagerInstance.minReplicationToBeInMaintenance, NameNode.instance.namesystem.DELEGATION_TOKEN_REMOVER_SCAN_INTERVAL, NameNode.instance.namesystem.fsLock.longestReadLockHeldIntervalMs, blockManagerInstance.datanodeManager.shouldSendCachingCommands, NameNode.instance.namesystem.nnResourceChecker.minimumRedundantVolumes, blockManagerInstance.placementPolicies.replicationPolicy.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseId, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, NameNode.instance.namesystem.needRollbackFsImage, NameNode.instance.namesystem.fsLock.writeLockReportingThresholdMs, blockManagerInstance.replicationStreamsHardLimit, NameNode.instance.namesystem.fsLock.timeStampOfLastReadLockReportMs, blockManagerInstance.blockReportLeaseManager.nextId, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAULT_MAX_LOAD_FACTOR, blockManagerInstance.datanodeManager.useDfsNetworkTopology, NameNode.instance.namesystem.dir.accessTimePrecision, NameNode.instance.namesystem.leaseManager.softLimit, blockManagerInstance.datanodeManager.rejectUnresolvedTopologyDN, NameNode.instance.namesystem.fsImage.exitAfterSave, NameNode.instance.namesystem.dir.storagePolicyEnabled, blockManagerInstance.bmSafeMode.safeReplication, NameNode.instance.namesystem.snapshotManager.allowNestedSnapshots, blockManagerInstance.datanodeManager.heartbeatIntervalSeconds, NameNode.instance.namesystem.maxFsObjects, blockManagerInstance.neededReconstruction.QUEUE_VERY_LOW_REDUNDANCY, blockManagerInstance.startupDelayBlockDeletionInMs, NameNode.instance.namesystem.maxListOpenFilesResponses, blockManagerInstance.bmSafeMode.$assertionsDisabled, blockManagerInstance.maxNumBlocksToLog, NameNode.instance.namesystem.dir.contentSleepMicroSec, NameNode.instance.namesystem.snapshotManager.skipCaptureAccessTimeOnlyChange, blockManagerInstance.placementPolicies.ecPolicy.staleInterval, NameNode.instance.namesystem.snapshotManager.captureOpenFiles, NameNode.instance.namesystem.startTime, NameNode.instance.namesystem.resourceLowSafeMode, NameNode.instance.namesystem.hasResourcesAvailable, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.initialCapacity, blockManagerInstance.neededReconstruction.QUEUE_HIGHEST_PRIORITY, blockManagerInstance.blockReportThread.MAX_LOCK_HOLD_MS, blockManagerInstance.datanodeManager.numStaleStorages, blockManagerInstance.maxReplicationStreams, blockManagerInstance.invalidateBlocks.$assertionsDisabled, NameNode.instance.namesystem.fsImage.isUpgradeFinalized, NameNode.instance.namesystem.edekCacheLoaderInterval, blockManagerInstance.excessRedundancyMap.size, NameNode.instance.namesystem.leaseManager.lastHolderUpdateTime, NameNode.instance.namesystem.fsRunning, NameNode.instance.namesystem.dir.contentCountLimit, blockManagerInstance.bmSafeMode.threshold, blockManagerInstance.invalidateBlocks.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.$assertionsDisabled, NameNode.instance.started, blockManagerInstance.datanodeManager.$assertionsDisabled, NameNode.instance.namesystem.topConf.isEnabled, blockManagerInstance.storageInfoDefragmentRatio, NameNode.instance.namesystem.cacheManager.nextDirectiveId, blockManagerInstance.blockReportLeaseManager.deferredHead.leaseTimeMs, blockManagerInstance.datanodeManager.avoidStaleDataNodesForRead, blockManagerInstance.initializedReplQueues, blockManagerInstance.blocksPerPostpondedRescan, blockManagerInstance.pendingReconstruction.fsRunning, blockManagerInstance.storagePolicySuite.ID_BIT_LENGTH, blockManagerInstance.maxCorruptFilesReturned, blockManagerInstance.blockReportLeaseManager.numPending, NameNode.instance.namesystem.resourceRecheckInterval, blockManagerInstance.pendingReconstruction.timedOutCount, NameNode.instance.namesystem.fsImage.lastAppliedTxId, NameNode.instance.namesystem.numCommittedAllowed, NameNode.instance.namesystem.$assertionsDisabled, blockManagerInstance.blockReportLeaseManager.leaseExpiryMs, NameNode.instance.namesystem.cacheManager.$assertionsDisabled, blockManagerInstance.defaultReplication, blockManagerInstance.neededReconstruction.QUEUE_LOW_REDUNDANCY, NameNode.instance.namesystem.maxBlocksPerFile, blockManagerInstance.neededReconstruction.$assertionsDisabled, blockManagerInstance.minReplication, blockManagerInstance.bmSafeMode.reachedTime, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.hash_mask, NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_COUNT_MAX, blockManagerInstance.datanodeManager.ratioUseStaleDataNodesForWrite, blockManagerInstance.blocksMap.capacity, NameNode.instance.namesystem.haEnabled, blockManagerInstance.datanodeManager.blocksPerPostponedMisreplicatedBlocksRescan, blockManagerInstance.heartbeatManager.stats.capacityRemaining, NameNode.instance.namesystem.dir.inodeXAttrsLimit, NameNode.instance.namesystem.datanodeStatistics.heartbeatRecheckInterval, blockManagerInstance.providedStorageMap.defaultReplication, blockManagerInstance.neededReconstruction.LEVEL, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.DEFAUT_MIN_LOAD_FACTOR, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.modification, NameNode.instance.namesystem.dir.posixAclInheritanceEnabled, NameNode.instance.namesystem.snapshotManager.numSnapshots, NameNode.instance.namesystem.editLogRollerInterval, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseTimeMs, blockManagerInstance.placementPolicies.replicationPolicy.heartbeatInterval, NameNode.instance.namesystem.alwaysUseDelegationTokensForTests, NameNode.instance.namesystem.dir.$assertionsDisabled, NameNode.instance.namesystem.fsLock.lockSuppressWarningIntervalMs, NameNode.instance.namesystem.topMetrics.isMetricsSourceEnabled, NameNode.instance.ACTIVE_STATE.lastHATransitionTime, blockManagerInstance.heartbeatManager.stats.blockPoolUsed, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MAXIMUM_CAPACITY, blockManagerInstance.bmSafeMode.replQueueThreshold, blockManagerInstance.blocksInvalidateWorkPct, blockManagerInstance.placementPolicies.ecPolicy.preferLocalNode, blockManagerInstance.heartbeatManager.stats.capacityUsedNonDfs, NameNode.instance.namesystem.cacheManager.maxListCachePoolsResponses, NameNode.instance.namesystem.snapshotManager.snapshotDiffAllowSnapRootDescendant, blockManagerInstance.heartbeatManager.stats.expiredHeartbeats, blockManagerInstance.blockIdManager.legacyGenerationStampLimit, blockManagerInstance.encryptDataTransfer, blockManagerInstance.blockIdManager.legacyGenerationStamp.LAST_RESERVED_STAMP, NameNode.instance.state.lastHATransitionTime, blockManagerInstance.placementPolicies.replicationPolicy.considerLoadFactor, blockManagerInstance.datanodeManager.numStaleNodes, blockManagerInstance.corruptReplicaBlocksCount, blockManagerInstance.placementPolicies.ecPolicy.heartbeatInterval, blockManagerInstance.shouldPostponeBlocksFromFuture, NameNode.instance.STANDBY_STATE.lastHATransitionTime, blockManagerInstance.bmSafeMode.datanodeThreshold, blockManagerInstance.blockReportLeaseManager.pendingHead.leaseId, blockManagerInstance.bmSafeMode.blockReplQueueThreshold, NameNode.instance.namesystem.dir.xattrMaxSize, blockManagerInstance.bmSafeMode.extension, blockManagerInstance.heartbeatManager.stats.nodesInServiceXceiverCount, NameNode.instance.namesystem.snapshotManager.snapshotCounter, blockManagerInstance.datanodeManager.staleInterval, NameNode.instance.namesystem.dir.yieldCount, NameNode.instance.namesystem.lazyPersistFileScrubIntervalSec, NameNode.instance.namesystem.fsLock.numReadLockWarningsSuppressed, blockManagerInstance.placementPolicies.replicationPolicy.preferLocalNode, blockManagerInstance.blockIdManager.blockIdGenerator.LAST_RESERVED_BLOCK_ID, NameNode.instance.namesystem.manualSafeMode, blockManagerInstance.neededReconstruction.QUEUE_REPLICAS_BADLY_DISTRIBUTED, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.minLoadFactor, blockManagerInstance.providedStorageMap.capacity, NameNode.instance.namesystem.topMetrics.rollingWindowManagers, blockManagerInstance.pendingDNMessages.count, blockManagerInstance.heartbeatManager.stats.cacheCapacity, blockManagerInstance.blocksMap.$assertionsDisabled, blockManagerInstance.datanodeManager.dataNodePeerStatsEnabled, NameNode.instance.namesystem.leaseManager.hardLimit, blockManagerInstance.pendingReconstruction.DEFAULT_RECHECK_INTERVAL, blockManagerInstance.placementPolicies.replicationPolicy.considerLoad, NameNode.instance.namesystem.minBlockSize, blockManagerInstance.heartbeatManager.stats.cacheUsed, blockManagerInstance.placementPolicies.ecPolicy.$assertionsDisabled, NameNode.instance.namesystem.edekCacheLoaderDelay, blockManagerInstance.bmSafeMode.lastStatusReport, blockManagerInstance.invalidateBlocks.pendingPeriodInMs, NameNode.instance.namesystem.imageLoaded, blockManagerInstance.neededReconstruction.QUEUE_WITH_CORRUPT_BLOCKS, blockManagerInstance.bmSafeMode.blockThreshold, blockManagerInstance.heartbeatManager.stats.nodesInService, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeoutInterval, blockManagerInstance.placementPolicies.ecPolicy.tolerateHeartbeatMultiplier, blockManagerInstance.placementPolicies.ecPolicy.considerLoad, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.datanodeManager.defaultInfoPort, blockManagerInstance.datanodeManager.checkIpHostnameInRegistration, NameNode.instance.namesystem.fsLock.readLockReportingThresholdMs, NameNode.instance.namesystem.cacheManager.directivesById, blockManagerInstance.datanodeManager.dataNodeDiskStatsEnabled, blockManagerInstance.blockReportLeaseManager.maxPending, blockManagerInstance.storageInfoDefragmentTimeout, NameNode.instance.DEFAULT_PORT, NameNode.instance.stopRequested, blockManagerInstance.datanodeManager.defaultIpcPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.shrinkThreshold, NameNode.instance.namesystem.blockDeletionIncrement, NameNode.instance.namesystem.leaseRecheckIntervalMs, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.MINIMUM_CAPACITY, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.capacity, blockManagerInstance.scheduledReplicationBlocksCount, NameNode.instance.namesystem.cacheManager.MIN_CACHED_BLOCKS_PERCENT, NameNode.instance.namesystem.dir.maxDirItems, blockManagerInstance.placementPolicies.ecPolicy.considerLoadFactor, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, blockManagerInstance.invalidateBlocks.startupTime, blockManagerInstance.invalidateBlocks.blockInvalidateLimit, NameNode.instance.namesystem.snapshotManager.snapshottables, blockManagerInstance.datanodeManager.defaultXferPort, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandMultiplier, blockManagerInstance.bmSafeMode.inRollBack, NameNode.instance.rpcServer.serviceAuthEnabled, blockManagerInstance.blocksReplWorkMultiplier, blockManagerInstance.bmSafeMode.blockTotal, NameNode.instance.namesystem.dir.CHECK_RESERVED_FILE_NAMES, NameNode.instance.namesystem.leaseManager.shouldRunMonitor, NameNode.instance.namesystem.leaseManager.leasesById, blockManagerInstance.datanodeManager.heartbeatManager.heartbeatRecheckInterval, NameNode.instance.namesystem.fsImage.$assertionsDisabled, NameNode.instance.namesystem.dir.quotaInitThreads, NameNode.instance.namesystem.leaseManager.$assertionsDisabled, blockManagerInstance.blockIdManager.generationStamp.LAST_RESERVED_STAMP, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.size, blockManagerInstance.reconstructionQueuesInitProgress, blockManagerInstance.heartbeatManager.stats.xceiverCount, NameNode.instance.namesystem.leaseManager.INODE_FILTER_WORKER_TASK_MIN, NameNode.instance.namesystem.standbyShouldCheckpoint, NameNode.instance.namesystem.maxLockHoldToReleaseLeaseMs, blockManagerInstance.heartbeatManager.stats.capacityTotal, blockManagerInstance.blockReportThread.lastFull, NameNode.instance.namesystem.startingActiveService, blockManagerInstance.storagePolicySuite.defaultPolicyID, blockManagerInstance.bmSafeMode.haEnabled, NameNode.instance.namesystem.dtpReplaceDatanodeOnFailure.bestEffort, blockManagerInstance.storageInfoDefragmentInterval, NameNode.instance.namesystem.maxCorruptFileBlocksReturn, blockManagerInstance.BLOCK_RECOVERY_TIMEOUT_MULTIPLIER, blockManagerInstance.bmSafeMode.startTime, NameNode.instance.namesystem.dir.aclsEnabled, NameNode.instance.namesystem.fsLock.metricsEnabled, NameNode.instance.allowStaleStandbyReads, NameNode.instance.namesystem.STEP_AWAITING_REPORTED_BLOCKS.sequenceNumber, blockManagerInstance.datanodeManager.timeBetweenResendingCachingDirectivesMs, blockManagerInstance.datanodeManager.heartbeatExpireInterval, NameNode.instance.HEALTH_MONITOR_WARN_THRESHOLD_MS, blockManagerInstance.placementPolicies.replicationPolicy.staleInterval, blockManagerInstance.hasNonEcBlockUsingStripedID, NameNode.instance.namesystem.snapshotDiffReportLimit, NameNode.instance.namesystem.dir.maxComponentLength, blockManagerInstance.bmSafeMode.STEP_AWAITING_REPORTED_BLOCKS.SEQUENCE, NameNode.instance.namesystem.dir.lsLimit, blockManagerInstance.providedStorageMap.$assertionsDisabled, NameNode.instance.namesystem.isPermissionEnabled, blockManagerInstance.pendingRecoveryBlocks.recoveryTimeouts.expandThreshold, NameNode.instance.namesystem.editLogRollerThreshold, blockManagerInstance.placementPolicies.replicationPolicy.tolerateHeartbeatMultiplier, NameNode.instance.namesystem.dir.isPermissionEnabled]
CHANG: dumpStates finished, took 39 ms to iterate through 259 states
CHANG: final fields in total: 0
CHANG: start to assertAll
